name: Deploy to Server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set image tag
        id: vars
        run: echo "tag=${GITHUB_SHA::8}" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push API Service
        run: |
          cd ./auth-service/auth_service
          docker build --pull --no-cache -t menoitami/backend_service.api:${{ steps.vars.outputs.tag }} .
          docker push menoitami/backend_service.api:${{ steps.vars.outputs.tag }}

      - name: Build and Push Notification Service
        run: |
          cd ./auth-service/notification
          docker build --pull --no-cache -t menoitami/backend_service.notification_app:${{ steps.vars.outputs.tag }} .
          docker push menoitami/backend_service.notification_app:${{ steps.vars.outputs.tag }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP }}
          username: ${{ secrets.USER_NAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            export TAG=${{ needs.build.outputs.vars.outputs.tag }}

            cd OpenID-provider/auth-service/
            git pull origin main

            echo "TAG=${TAG}" > .env

            docker compose down
            docker compose pull
            docker compose build --no-cache
            docker compose up -d --force-recreate

            echo "Удаление старых неиспользуемых Docker-образов..."
            docker image prune -af --filter "until=24h"
